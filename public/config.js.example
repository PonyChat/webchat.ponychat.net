conf = qwebirc.config.load({
    // UI OPTIONS
    // These alter the way the frontend looks and presents information to the user.
    // Many of these can be set by user in their options, in which case these
    // settings serve as the default.
    "ui": {

        // DEDICATED MSG WINDOW: Whether PMs should be shown in a dedicated window.
        "dedicated_msg_window": false,

        // DEDICATED NOTICE WINDOW: Whether notices should be shown in a dedicated
        // window.
        "dedicated_notice_window": false,

        // HIDE JOINPARTS: Whether joins and parts should be hidden in channels.
        "hide_joinparts": false,

        // SIMPLE COLOR: If enabled, hides most colour options, only showing the
        // background hue slider. This may be desirable if you consider the colour
        // options too complicated. Note that how useful the results of moving this
        // single slider are depends on the colour you have set.
        "simple_color": false,

        // PRIMARY FOREGROUND COLOR: The base foreground colour for the UI.
        // Used for the bulk of the text.
        // Provide as a hexadecimal RGB value, without a # at the start.
        "fg_color": "DDDDDD",

        // SECONDARY FOREGROUND COLOR: The secondary foreground colour for the UI.
        // Used for titles and links. If left empty, the same as the primary.
        // Provide as a hexadecimal RGB value, without a # at the start.
        "fg_sec_color": "999999",

        // BACKGROUND COLOR: The base background colour for the UI.
        // Provide as a hexadecimal RGB value, without a # at the start.
        "bg_color": "111111",

        // LASTPOS LINE: Whether a "last position" marker should be displayed.
        "lastpos_line": true,

        // NICK CLICK QUERY: Whether clicking on a nick in channel queries them.
        // If off, it whoises instead.
        "nick_click_query": false,

        // NICK COLORS: Whether nicks are coloured by default.
        "nick_colors": false,

        // NICK STATUS: Whether to show status symbols before nicknames in channel lines.
        "nick_status": false,

        // FLASH ON MENTION: Whether to flash the title for attention when highlighted.
        "flash_on_mention": false,

        // BEEP ON MENTION: Whether to beep for attention when highlighted.
        // Requires Flash; does nothing if the user lacks it.
        "beep_on_mention": false,

        // PRIVACY: Whether or not this installation has a privacy policy
        // policy pane will be expected at static_base_url + panes/privacypolicy.html
        "privacy": false
    },
    // ATHEME INTEGRATION OPTIONS
    // These options control integration with Atheme in the frontend.
    "atheme": {

        // NICKSERV LOGIN: Enable login to a NickServ account using Iris, before
        // connecting. Requires SASL.
        "nickserv_login": true,

        // SASL TYPE: Which sasl method to use.
        // Supported methods: PLAIN, AUTHCOOKIE
        "sasl_type": "PLAIN",

        // SSO: Enable 'Single Sign On'. The embed will expect an AUTHCOOKIE to
        // be passed via a url fragment
        "sso_login": false,

        // CHAN LIST ON START: Open the channel listing automatically when the
        // client starts. Requires the channel list be enabled, obviously.
        // Always defaults off if any query string parameters are specified; must be
        // explicitly set on in the query string to enable.
        "chan_list_on_start": false,

        // CHAN LIST CLOUD VIEW: Whether the channel list's cloud view should be the
        // default, or it should default to the list view. An option to switch view mode
        // is shown regardless.
        "chan_list_cloud_view": false,

        "chan_list": true
    },
    "flash": {
        // SERVER: Hostname (or IP address) of IRC server to connect to.
        "server": "irc.myserver.com",

        // PORT: Port of IRC server to connect to.
        "port": 6667,

        // XMLPORT: Port of IRC servers flash policy daemon
        "xmlport": 8430,
    },
    "websocket": {
        // URL: URL of IRC server to connect to.
        "url": "ws://irc.myserver.com/"
    },
    // FRONTEND OPTIONS
    // These alter the general settings and text used within the frontend.
    // Many of these are overridable by query string, in which case these settings
    // serve as the default when they are not.
    "frontend": {

        // BASE URL: URL that this qwebirc instance will be available at, add
        // the port number if your instance runs on a port other than 80.
        "base_url": "",

        // STATIC BASE URL: This value is used to build the URL for all static
        // HTTP requests.
        "static_base_url": "",

        // DYNAMIC BASE URL: This value is used to build the URL for all dynamic
        // HTTP requests.
        "dynamic_base_url": "",

        // NETWORK NAME: The name of your IRC network, displayed throughout the
        // application.
        "network_name": "FooNet",

        // APP TITLE: The title of the application in the web browser.
        // The title of the application in the web browser.
        "app_title": "FooNet Web IRC",

        // CHAN PROMPT: Whether the user should be prompted to edit the default channel
        // provided by settings before connecting if prompted for connection details.
        // Otherwise, they are only prompted for nick. Ignored if initial_chans is empty.
        // Primarily useful as a query string parameter for embedded webclients.
        "chan_prompt": true,

        // PROMPT: Whether the user should be prompted to edit their connection details
        // before connecting. Ignored if initial_nick or initial_chans are empty.
        "prompt": true,

        // INITIAL NICK: Default initial nickname for the user.
        // '.' characters will be replaced by random digits.
        // Leave blank to force the user to enter a nick before connecting.
        "initial_nick": "",

        // INITIAL CHANS: Default channels to join on connect.
        // Comma-separate channels, and provide keys after, space-separated.
        // Leave blank for to join no channels by default.
        "initial_chans": "",

        // CHAN AUTOCONNECT: Whether on clicking a channel in the client prior to
        // connect, in a channel list or other URLified text, they should be
        // automatically connected and joined without any further confirmation if they
        // have a nick either provided by settings or typed into a connect window.
        // If set false, then the user is simply redirected to the connect window, with
        // the channel set in the channel box.
        "chan_autoconnect": true,

        // CONNECTIONS: What order to attempt methods of connection in
        // valid values: ajax flash websocket
        "connections": ["flash"],

    }
});
